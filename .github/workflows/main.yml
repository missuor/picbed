# name: Sync Repo
# on:
#   push:

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - name: test
#       uses: actions/checkout@v3
#     - name: test2
#       run: echo Hello, world!

#     - name: Run a multi-line script
#       run: |
#         echo Add other actions to build,
#         echo test, and deploy your project.

#     - name: Sync Repo
#       uses: serverlesslife-cn/sync-repo-to-coding@master
#       env:
#           SSH_PRIVATE_KEY: ${{ secrets.ID_RSA_FOR_CODE_SYNC_IN_GITHUB }}
#       with:
#           github-repo: "git@github.com:missuor/picbed.git"
#           coding-repo: "git@github.com:missuor/notes.git"




# This is a basic workflow to help you get started with Actions

name: Sync Repo

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "static" ]
  pull_request:
    branches: [ "static" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        env:
            SSH_PRIVATE_KEY: ${{ secrets.ID_RSA_FOR_CODE_SYNC_IN_GITHUB }}
        run: |

          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          GIT_SSH_COMMAND="ssh -v"
          cd $GITHUB_WORKSPACE
          # git clone git@github.com:missuor/picbed.git
          # git clone git@github.com:missuor/notes.git
          # cd picbed
          git pull
          git remote set-url --push origin "git@github.com:missuor/notes.git"
          git push --force

